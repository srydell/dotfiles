return {
  ['std::assignable_from'] = '<concepts>',
  ['std::common_reference_with'] = '<concepts>',
  ['std::common_with'] = '<concepts>',
  ['std::constructible_from'] = '<concepts>',
  ['std::convertible_to'] = '<concepts>',
  ['std::copy_constructible'] = '<concepts>',
  ['std::copyable'] = '<concepts>',
  ['std::default_initializable'] = '<concepts>',
  ['std::derived_from'] = '<concepts>',
  ['std::destructible'] = '<concepts>',
  ['std::equality_comparable'] = '<concepts>',
  ['std::equivalence_relation'] = '<concepts>',
  ['std::floating_point'] = '<concepts>',
  ['std::integral'] = '<concepts>',
  ['std::invocable'] = '<concepts>',
  ['std::movable'] = '<concepts>',
  ['std::move_constructible'] = '<concepts>',
  ['std::predicate'] = '<concepts>',
  ['std::ranges::swap'] = '<concepts>',
  ['std::regular'] = '<concepts>',
  ['std::relation'] = '<concepts>',
  ['std::same_as'] = '<concepts>',
  ['std::semiregular'] = '<concepts>',
  ['std::signed_integral'] = '<concepts>',
  ['std::strict_weak_order'] = '<concepts>',
  ['std::swappable'] = '<concepts>',
  ['std::totally_ordered'] = '<concepts>',
  ['std::unsigned_integral'] = '<concepts>',
  ['std::coroutine_handle'] = '<coroutine>',
  ['std::coroutine_traits'] = '<coroutine>',
  ['std::noop_coroutine'] = '<coroutine>',
  ['std::noop_coroutine_handle'] = '<coroutine>',
  ['std::noop_coroutine_promise'] = '<coroutine>',
  ['std::suspend_always'] = '<coroutine>',
  ['std::suspend_never'] = '<coroutine>',
  ['std::any'] = '<any>',
  ['std::any_cast'] = '<any>',
  ['std::bad_any_cast'] = '<any>',
  ['std::make_any'] = '<any>',
  ['std::bitset'] = '<bitset>',
  ['std::chrono::ambiguous_local_time'] = '<chrono>',
  ['std::chrono::choose'] = '<chrono>',
  ['std::chrono::clock_time_conversion'] = '<chrono>',
  ['std::chrono::day'] = '<chrono>',
  ['std::chrono::duration'] = '<chrono>',
  ['std::chrono::duration_values'] = '<chrono>',
  ['std::chrono::file_clock'] = '<chrono>',
  ['std::chrono::gps_clock'] = '<chrono>',
  ['std::chrono::hh_mm_ss'] = '<chrono>',
  ['std::chrono::high_resolution_clock'] = '<chrono>',
  ['std::chrono::is_clock'] = '<chrono>',
  ['std::chrono::last_spec'] = '<chrono>',
  ['std::chrono::leap_second'] = '<chrono>',
  ['std::chrono::leap_second_info'] = '<chrono>',
  ['std::chrono::local_info'] = '<chrono>',
  ['std::chrono::local_t'] = '<chrono>',
  ['std::chrono::month'] = '<chrono>',
  ['std::chrono::month_day'] = '<chrono>',
  ['std::chrono::month_day_last'] = '<chrono>',
  ['std::chrono::month_weekday'] = '<chrono>',
  ['std::chrono::month_weekday_last'] = '<chrono>',
  ['std::chrono::nonexistent_local_time'] = '<chrono>',
  ['std::chrono::days'] = '<chrono>',
  ['std::chrono::hours'] = '<chrono>',
  ['std::chrono::microseconds'] = '<chrono>',
  ['std::chrono::milliseconds'] = '<chrono>',
  ['std::chrono::minutes'] = '<chrono>',
  ['std::chrono::months'] = '<chrono>',
  ['std::chrono::nanoseconds'] = '<chrono>',
  ['std::chrono::seconds'] = '<chrono>',
  ['std::chrono::weeks'] = '<chrono>',
  ['std::chrono::years'] = '<chrono>',
  ['std::chrono::steady_clock'] = '<chrono>',
  ['std::chrono::sys_info'] = '<chrono>',
  ['std::chrono::system_clock'] = '<chrono>',
  ['std::chrono::tai_clock'] = '<chrono>',
  ['std::chrono::time_point'] = '<chrono>',
  ['std::chrono::time_zone'] = '<chrono>',
  ['std::chrono::time_zone_link'] = '<chrono>',
  ['std::chrono::treat_as_floating_point'] = '<chrono>',
  ['std::chrono::tzdb'] = '<chrono>',
  ['std::chrono::tzdb_list'] = '<chrono>',
  ['std::chrono::utc_clock'] = '<chrono>',
  ['std::chrono::weekday'] = '<chrono>',
  ['std::chrono::weekday_indexed'] = '<chrono>',
  ['std::chrono::weekday_last'] = '<chrono>',
  ['std::chrono::year'] = '<chrono>',
  ['std::chrono::year_month'] = '<chrono>',
  ['std::chrono::year_month_day'] = '<chrono>',
  ['std::chrono::year_month_day_last'] = '<chrono>',
  ['std::chrono::year_month_weekday'] = '<chrono>',
  ['std::chrono::year_month_weekday_last'] = '<chrono>',
  ['std::chrono::zoned_time'] = '<chrono>',
  ['std::chrono::zoned_traits'] = '<chrono>',
  ['std::common_comparison_category'] = '<compare>',
  ['std::compare_partial_order_fallback'] = '<compare>',
  ['std::compare_strong_order_fallback'] = '<compare>',
  ['std::compare_three_way'] = '<compare>',
  ['std::compare_three_way_result'] = '<compare>',
  ['std::compare_weak_order_fallback'] = '<compare>',
  ['std::is_eq'] = '<compare>',
  ['std::partial_order'] = '<compare>',
  ['std::partial_ordering'] = '<compare>',
  ['std::strong_order'] = '<compare>',
  ['std::strong_ordering'] = '<compare>',
  ['std::three_way_comparable'] = '<compare>',
  ['std::weak_order'] = '<compare>',
  ['std::weak_ordering'] = '<compare>',
  ['std::jmp_buf'] = '<csetjmp>',
  ['std::longjmp'] = '<csetjmp>',
  ['std::setjmp'] = '<csetjmp>',
  ['std::raise'] = '<csignal>',
  ['std::sig_atomic_t'] = '<csignal>',
  ['std::signal'] = '<csignal>',
  ['std::va_arg'] = '<cstdarg>',
  ['std::va_copy'] = '<cstdarg>',
  ['std::va_end'] = '<cstdarg>',
  ['std::va_list'] = '<cstdarg>',
  ['std::va_start'] = '<cstdarg>',
  ['std::byte'] = '<cstddef>',
  ['std::max_align_t'] = '<cstddef>',
  ['std::nullptr_t'] = '<cstddef>',
  ['std::offsetof'] = '<cstddef>',
  ['std::ptrdiff_t'] = '<cstddef>',
  ['std::size_t'] = '<cstddef>',
  ['std::to_integer'] = '<cstddef>',
  ['std::_Exit'] = '<cstdlib>',
  ['std::abort'] = '<cstdlib>',
  ['std::aligned_alloc'] = '<cstdlib>',
  ['std::at_quick_exit'] = '<cstdlib>',
  ['std::atexit'] = '<cstdlib>',
  ['std::atof'] = '<cstdlib>',
  ['std::atoi'] = '<cstdlib>',
  ['std::bsearch'] = '<cstdlib>',
  ['std::calloc'] = '<cstdlib>',
  ['std::div_t'] = '<cstdlib>',
  ['std::exit'] = '<cstdlib>',
  ['std::free'] = '<cstdlib>',
  ['std::getenv'] = '<cstdlib>',
  ['std::ldiv_t'] = '<cstdlib>',
  ['std::lldiv_t'] = '<cstdlib>',
  ['std::malloc'] = '<cstdlib>',
  ['std::mblen'] = '<cstdlib>',
  ['std::mbstowcs'] = '<cstdlib>',
  ['std::mbtowc'] = '<cstdlib>',
  ['std::qsort'] = '<cstdlib>',
  ['std::quick_exit'] = '<cstdlib>',
  ['std::rand'] = '<cstdlib>',
  ['std::realloc'] = '<cstdlib>',
  ['std::srand'] = '<cstdlib>',
  ['std::strtof'] = '<cstdlib>',
  ['std::strtol'] = '<cstdlib>',
  ['std::strtoul'] = '<cstdlib>',
  ['std::system'] = '<cstdlib>',
  ['std::wcstombs'] = '<cstdlib>',
  ['std::wctomb'] = '<cstdlib>',
  ['std::asctime'] = '<ctime>',
  ['std::clock'] = '<ctime>',
  ['std::clock_t'] = '<ctime>',
  ['std::ctime'] = '<ctime>',
  ['std::difftime'] = '<ctime>',
  ['std::gmtime'] = '<ctime>',
  ['std::localtime'] = '<ctime>',
  ['std::mktime'] = '<ctime>',
  ['std::strftime'] = '<ctime>',
  ['std::time'] = '<ctime>',
  ['std::time_t'] = '<ctime>',
  ['std::timespec'] = '<ctime>',
  ['std::timespec_get'] = '<ctime>',
  ['std::tm'] = '<ctime>',
  ['std::breakpoint'] = '<debugging>',
  ['std::breakpoint_if_debugging'] = '<debugging>',
  ['std::is_debugger_present'] = '<debugging>',
  ['std::bad_expected_access'] = '<expected>',
  ['std::expected'] = '<expected>',
  ['std::unexpect'] = '<expected>',
  ['std::unexpected'] = '<expected>',
  ['std::_1, _2, _3, _4, ...'] = '<functional>',
  ['std::bad_function_call'] = '<functional>',
  ['std::bind'] = '<functional>',
  ['std::bind_front'] = '<functional>',
  ['std::bit_and'] = '<functional>',
  ['std::bit_not'] = '<functional>',
  ['std::bit_or'] = '<functional>',
  ['std::bit_xor'] = '<functional>',
  ['std::boyer_moore_horspool_searcher'] = '<functional>',
  ['std::boyer_moore_searcher'] = '<functional>',
  ['std::copyable_function'] = '<functional>',
  ['std::default_searcher'] = '<functional>',
  ['std::divides'] = '<functional>',
  ['std::equal_to'] = '<functional>',
  ['std::function'] = '<functional>',
  ['std::function_ref'] = '<functional>',
  ['std::greater'] = '<functional>',
  ['std::greater_equal'] = '<functional>',
  ['std::identity'] = '<functional>',
  ['std::invoke'] = '<functional>',
  ['std::is_bind_expression'] = '<functional>',
  ['std::is_placeholder'] = '<functional>',
  ['std::less'] = '<functional>',
  ['std::less_equal'] = '<functional>',
  ['std::logical_and'] = '<functional>',
  ['std::logical_not'] = '<functional>',
  ['std::logical_or'] = '<functional>',
  ['std::mem_fn'] = '<functional>',
  ['std::minus'] = '<functional>',
  ['std::modulus'] = '<functional>',
  ['std::move_only_function'] = '<functional>',
  ['std::multiplies'] = '<functional>',
  ['std::negate'] = '<functional>',
  ['std::not_equal_to'] = '<functional>',
  ['std::not_fn'] = '<functional>',
  ['std::plus'] = '<functional>',
  ['std::ranges::equal_to'] = '<functional>',
  ['std::ranges::greater'] = '<functional>',
  ['std::ranges::greater_equal'] = '<functional>',
  ['std::ranges::less'] = '<functional>',
  ['std::ranges::less_equal'] = '<functional>',
  ['std::ranges::not_equal_to'] = '<functional>',
  ['std::ref'] = '<functional>',
  ['std::reference_wrapper'] = '<functional>',
  ['std::unwrap_reference'] = '<functional>',
  ['std::initializer_list'] = '<initializer_list>',
  ['std::bad_optional_access'] = '<optional>',
  ['std::make_optional'] = '<optional>',
  ['std::nullopt'] = '<optional>',
  ['std::nullopt_t'] = '<optional>',
  ['std::optional'] = '<optional>',
  ['std::source_location'] = '<source_location>',
  ['std::apply'] = '<tuple>',
  ['std::forward_as_tuple'] = '<tuple>',
  ['std::make_from_tuple'] = '<tuple>',
  ['std::make_tuple'] = '<tuple>',
  ['std::tie'] = '<tuple>',
  ['std::tuple'] = '<tuple>',
  ['std::tuple_cat'] = '<tuple>',
  ['std::tuple_element'] = '<tuple>',
  ['std::tuple_size'] = '<tuple>',
  ['std::false_type'] = '<type_traits>',
  ['std::has_unique_object_representations'] = '<type_traits>',
  ['std::integral_constant'] = '<type_traits>',
  ['std::is_abstract'] = '<type_traits>',
  ['std::is_aggregate'] = '<type_traits>',
  ['std::is_arithmetic'] = '<type_traits>',
  ['std::is_array'] = '<type_traits>',
  ['std::is_bounded_array'] = '<type_traits>',
  ['std::is_class'] = '<type_traits>',
  ['std::is_compound'] = '<type_traits>',
  ['std::is_const'] = '<type_traits>',
  ['std::is_empty'] = '<type_traits>',
  ['std::is_enum'] = '<type_traits>',
  ['std::is_final'] = '<type_traits>',
  ['std::is_floating_point'] = '<type_traits>',
  ['std::is_function'] = '<type_traits>',
  ['std::is_fundamental'] = '<type_traits>',
  ['std::is_implicit_lifetime'] = '<type_traits>',
  ['std::is_integral'] = '<type_traits>',
  ['std::is_literal_type'] = '<type_traits>',
  ['std::is_lvalue_reference'] = '<type_traits>',
  ['std::is_member_function_pointer'] = '<type_traits>',
  ['std::is_member_object_pointer'] = '<type_traits>',
  ['std::is_member_pointer'] = '<type_traits>',
  ['std::is_null_pointer'] = '<type_traits>',
  ['std::is_object'] = '<type_traits>',
  ['std::is_pod'] = '<type_traits>',
  ['std::is_pointer'] = '<type_traits>',
  ['std::is_polymorphic'] = '<type_traits>',
  ['std::is_reference'] = '<type_traits>',
  ['std::is_rvalue_reference'] = '<type_traits>',
  ['std::is_scalar'] = '<type_traits>',
  ['std::is_scoped_enum'] = '<type_traits>',
  ['std::is_signed'] = '<type_traits>',
  ['std::is_standard_layout'] = '<type_traits>',
  ['std::is_trivial'] = '<type_traits>',
  ['std::is_trivially_copyable'] = '<type_traits>',
  ['std::is_unbounded_array'] = '<type_traits>',
  ['std::is_union'] = '<type_traits>',
  ['std::is_unsigned'] = '<type_traits>',
  ['std::is_void'] = '<type_traits>',
  ['std::is_volatile'] = '<type_traits>',
  ['std::true_type'] = '<type_traits>',
  ['std::type_index'] = '<typeindex>',
  ['std::bad_cast'] = '<typeinfo>',
  ['std::bad_typeid'] = '<typeinfo>',
  ['std::type_info'] = '<typeinfo>',
  ['std::as_const'] = '<utility>',
  ['std::cmp_equal'] = '<utility>',
  ['std::declval'] = '<utility>',
  ['std::exchange'] = '<utility>',
  ['std::forward'] = '<utility>',
  ['std::forward_like'] = '<utility>',
  ['std::ignore'] = '<utility>',
  ['std::in_place'] = '<utility>',
  ['std::in_range'] = '<utility>',
  ['std::integer_sequence'] = '<utility>',
  ['std::make_pair'] = '<utility>',
  ['std::move'] = '<utility>',
  ['std::move_if_noexcept'] = '<utility>',
  ['std::nontype '] = '<utility>',
  ['std::pair'] = '<utility>',
  ['std::piecewise_construct'] = '<utility>',
  ['std::rel_ops'] = '<utility>',
  ['std::to_underlying'] = '<utility>',
  ['std::unreachable'] = '<utility>',
  ['std::bad_variant_access'] = '<variant>',
  ['std::get_if'] = '<variant>',
  ['std::holds_alternative'] = '<variant>',
  ['std::monostate'] = '<variant>',
  ['std::variant'] = '<variant>',
  ['std::variant_alternative'] = '<variant>',
  ['std::variant_npos'] = '<variant>',
  ['std::variant_size'] = '<variant>',
  ['std::visit'] = '<variant>',
  ['std::addressof'] = '<memory>',
  ['std::align'] = '<memory>',
  ['std::allocate_shared'] = '<memory>',
  ['std::allocation_result'] = '<memory>',
  ['std::allocator'] = '<memory>',
  ['std::allocator_arg'] = '<memory>',
  ['std::allocator_traits'] = '<memory>',
  ['std::assume_aligned'] = '<memory>',
  ['std::auto_ptr'] = '<memory>',
  ['std::bad_weak_ptr'] = '<memory>',
  ['std::construct_at'] = '<memory>',
  ['std::declare_no_pointers'] = '<memory>',
  ['std::declare_reachable'] = '<memory>',
  ['std::default_delete'] = '<memory>',
  ['std::destroy'] = '<memory>',
  ['std::destroy_at'] = '<memory>',
  ['std::destroy_n'] = '<memory>',
  ['std::enable_shared_from_this'] = '<memory>',
  ['std::get_deleter'] = '<memory>',
  ['std::get_pointer_safety'] = '<memory>',
  ['std::get_temporary_buffer'] = '<memory>',
  ['std::inout_ptr'] = '<memory>',
  ['std::inout_ptr_t'] = '<memory>',
  ['std::make_obj_using_allocator'] = '<memory>',
  ['std::make_shared'] = '<memory>',
  ['std::make_unique'] = '<memory>',
  ['std::out_ptr'] = '<memory>',
  ['std::out_ptr_t'] = '<memory>',
  ['std::owner_equal'] = '<memory>',
  ['std::owner_less'] = '<memory>',
  ['std::pointer_safety'] = '<memory>',
  ['std::pointer_traits'] = '<memory>',
  ['std::raw_storage_iterator'] = '<memory>',
  ['std::return_temporary_buffer'] = '<memory>',
  ['std::shared_ptr'] = '<memory>',
  ['std::start_lifetime_as'] = '<memory>',
  ['std::static_pointer_cast'] = '<memory>',
  ['std::to_address'] = '<memory>',
  ['std::undeclare_no_pointers'] = '<memory>',
  ['std::undeclare_reachable'] = '<memory>',
  ['std::uninitialized_construct_using_allocator'] = '<memory>',
  ['std::uninitialized_copy'] = '<memory>',
  ['std::uninitialized_copy_n'] = '<memory>',
  ['std::uninitialized_default_construct'] = '<memory>',
  ['std::uninitialized_default_construct_n'] = '<memory>',
  ['std::uninitialized_fill'] = '<memory>',
  ['std::uninitialized_fill_n'] = '<memory>',
  ['std::uninitialized_move'] = '<memory>',
  ['std::uninitialized_move_n'] = '<memory>',
  ['std::uninitialized_value_construct'] = '<memory>',
  ['std::uninitialized_value_construct_n'] = '<memory>',
  ['std::unique_ptr'] = '<memory>',
  ['std::uses_allocator'] = '<memory>',
  ['std::uses_allocator_construction_args'] = '<memory>',
  ['std::weak_ptr'] = '<memory>',
  ['std::pmr::get_default_resource'] = '<memory_resource>',
  ['std::pmr::memory_resource'] = '<memory_resource>',
  ['std::pmr::monotonic_buffer_resource'] = '<memory_resource>',
  ['std::pmr::new_delete_resource'] = '<memory_resource>',
  ['std::pmr::null_memory_resource'] = '<memory_resource>',
  ['std::pmr::polymorphic_allocator'] = '<memory_resource>',
  ['std::pmr::pool_options'] = '<memory_resource>',
  ['std::pmr::set_default_resource'] = '<memory_resource>',
  ['std::pmr::synchronized_pool_resource'] = '<memory_resource>',
  ['std::pmr::unsynchronized_pool_resource'] = '<memory_resource>',
  ['std::align_val_t'] = '<new>',
  ['std::bad_alloc'] = '<new>',
  ['std::bad_array_new_length'] = '<new>',
  ['std::destroying_delete'] = '<new>',
  ['std::get_new_handler'] = '<new>',
  ['std::hardware_destructive_interference_size'] = '<new>',
  ['std::launder'] = '<new>',
  ['std::new_handler'] = '<new>',
  ['std::nothrow'] = '<new>',
  ['std::set_new_handler'] = '<new>',
  ['std::scoped_allocator_adaptor'] = '<scoped_allocator>',
  ['std::PRId8'] = '<cinttypes>',
  ['std::PRIi8'] = '<cinttypes>',
  ['std::PRIo8'] = '<cinttypes>',
  ['std::PRIu8'] = '<cinttypes>',
  ['std::PRIx8'] = '<cinttypes>',
  ['std::SCNd8'] = '<cinttypes>',
  ['std::SCNi8'] = '<cinttypes>',
  ['std::SCNo8'] = '<cinttypes>',
  ['std::SCNu8'] = '<cinttypes>',
  ['std::SCNx8'] = '<cinttypes>',
  ['std::imaxdiv_t'] = '<cinttypes>',
  ['std::strtoimax'] = '<cinttypes>',
  ['std::wcstoimax'] = '<cinttypes>',
  ['std::int8_t'] = '<cstdint>',
  ['std::int_fast8_t'] = '<cstdint>',
  ['std::int_least8_t'] = '<cstdint>',
  ['std::intmax_t'] = '<cstdint>',
  ['std::intptr_t'] = '<cstdint>',
  ['std::uint8_t'] = '<cstdint>',
  ['std::uint_fast8_t'] = '<cstdint>',
  ['std::uint_least8_t'] = '<cstdint>',
  ['std::uintmax_t'] = '<cstdint>',
  ['std::uintptr_t'] = '<cstdint>',
  ['std::float_denorm_style'] = '<limits>',
  ['std::float_round_style'] = '<limits>',
  ['std::numeric_limits'] = '<limits>',
  ['std::bfloat16_t'] = '<stdfloat>',
  ['std::float16_t'] = '<stdfloat>',
  ['std::assert'] = '<cassert>',
  ['std::errno'] = '<cerrno>',
  ['std::bad_exception'] = '<exception>',
  ['std::current_exception'] = '<exception>',
  ['std::exception'] = '<exception>',
  ['std::exception_ptr'] = '<exception>',
  ['std::get_terminate'] = '<exception>',
  ['std::get_unexpected'] = '<exception>',
  ['std::make_exception_ptr'] = '<exception>',
  ['std::nested_exception'] = '<exception>',
  ['std::rethrow_exception'] = '<exception>',
  ['std::rethrow_if_nested'] = '<exception>',
  ['std::set_terminate'] = '<exception>',
  ['std::set_unexpected'] = '<exception>',
  ['std::terminate'] = '<exception>',
  ['std::terminate_handler'] = '<exception>',
  ['std::throw_with_nested'] = '<exception>',
  ['std::uncaught_exception'] = '<exception>',
  ['std::unexpected_handler'] = '<exception>',
  ['std::basic_stacktrace'] = '<stacktrace>',
  ['std::stacktrace_entry'] = '<stacktrace>',
  ['std::domain_error'] = '<stdexcept>',
  ['std::invalid_argument'] = '<stdexcept>',
  ['std::length_error'] = '<stdexcept>',
  ['std::logic_error'] = '<stdexcept>',
  ['std::out_of_range'] = '<stdexcept>',
  ['std::overflow_error'] = '<stdexcept>',
  ['std::range_error'] = '<stdexcept>',
  ['std::runtime_error'] = '<stdexcept>',
  ['std::underflow_error'] = '<stdexcept>',
  ['std::errc'] = '<system_error>',
  ['std::error_category'] = '<system_error>',
  ['std::error_code'] = '<system_error>',
  ['std::error_condition'] = '<system_error>',
  ['std::generic_category'] = '<system_error>',
  ['std::is_error_code_enum'] = '<system_error>',
  ['std::is_error_condition_enum'] = '<system_error>',
  ['std::system_category'] = '<system_error>',
  ['std::system_error'] = '<system_error>',
  ['std::isalnum'] = '<cctype>',
  ['std::isalpha'] = '<cctype>',
  ['std::isblank'] = '<cctype>',
  ['std::iscntrl'] = '<cctype>',
  ['std::isdigit'] = '<cctype>',
  ['std::isgraph'] = '<cctype>',
  ['std::islower'] = '<cctype>',
  ['std::isprint'] = '<cctype>',
  ['std::ispunct'] = '<cctype>',
  ['std::isspace'] = '<cctype>',
  ['std::isupper'] = '<cctype>',
  ['std::isxdigit'] = '<cctype>',
  ['std::tolower'] = '<cctype>',
  ['std::toupper'] = '<cctype>',
  ['std::chars_format'] = '<charconv>',
  ['std::from_chars'] = '<charconv>',
  ['std::from_chars_result'] = '<charconv>',
  ['std::to_chars'] = '<charconv>',
  ['std::to_chars_result'] = '<charconv>',
  ['std::c16rtomb'] = '<cuchar>',
  ['std::c32rtomb'] = '<cuchar>',
  ['std::c8rtomb'] = '<cuchar>',
  ['std::mbrtoc16'] = '<cuchar>',
  ['std::mbrtoc32'] = '<cuchar>',
  ['std::mbrtoc8'] = '<cuchar>',
  ['std::mbstate_t'] = '<cuchar>',
  ['std::wctrans_t'] = '<cwctype>',
  ['std::wctype_t'] = '<cwctype>',
  ['std::wint_t'] = '<cwctype>',
  ['std::basic_format_arg'] = '<format>',
  ['std::basic_format_args'] = '<format>',
  ['std::basic_format_context'] = '<format>',
  ['std::basic_format_parse_context'] = '<format>',
  ['std::basic_format_string'] = '<format>',
  ['std::enable_nonlocking_formatter_optimization'] = '<format>',
  ['std::format'] = '<format>',
  ['std::format_error'] = '<format>',
  ['std::format_kind'] = '<format>',
  ['std::format_to'] = '<format>',
  ['std::format_to_n'] = '<format>',
  ['std::formattable'] = '<format>',
  ['std::formatted_size'] = '<format>',
  ['std::formatter'] = '<format>',
  ['std::make_format_args'] = '<format>',
  ['std::range_format'] = '<format>',
  ['std::range_formatter'] = '<format>',
  ['std::runtime_format'] = '<format>',
  ['std::vformat'] = '<format>',
  ['std::vformat_to'] = '<format>',
  ['std::visit_format_arg'] = '<format>',
  ['std::basic_string'] = '<string>',
  ['std::char_traits'] = '<string>',
  ['std::getline'] = '<string>',
  ['std::pmr::basic_string'] = '<string>',
  ['std::pmr::string'] = '<string>',
  ['std::pmr::u16string'] = '<string>',
  ['std::pmr::u32string'] = '<string>',
  ['std::pmr::u8string'] = '<string>',
  ['std::pmr::wstring'] = '<string>',
  ['std::string'] = '<string>',
  ['std::u16string'] = '<string>',
  ['std::u32string'] = '<string>',
  ['std::u8string'] = '<string>',
  ['std::wstring'] = '<string>',
  ['std::stof'] = '<string>',
  ['std::stoi'] = '<string>',
  ['std::stoul'] = '<string>',
  ['std::to_string'] = '<string>',
  ['std::to_wstring'] = '<string>',
  ['std::basic_string_view'] = '<string_view>',
  ['std::array'] = '<array>',
  ['std::to_array'] = '<array>',
  ['std::deque'] = '<deque>',
  ['std::flat_map'] = '<flat_map>',
  ['std::flat_multimap'] = '<flat_map>',
  ['std::flat_multiset'] = '<flat_set>',
  ['std::flat_set'] = '<flat_set>',
  ['std::forward_list'] = '<forward_list>',
  ['std::inplace_vector'] = '<inplace_vector>',
  ['std::list'] = '<list>',
  ['std::map'] = '<map>',
  ['std::multimap'] = '<map>',
  ['std::default_accessor'] = '<mdspan>',
  ['std::dextents'] = '<mdspan>',
  ['std::extents'] = '<mdspan>',
  ['std::full_extent'] = '<mdspan>',
  ['std::layout_left'] = '<mdspan>',
  ['std::layout_left_padded'] = '<mdspan>',
  ['std::layout_right'] = '<mdspan>',
  ['std::layout_right_padded'] = '<mdspan>',
  ['std::layout_stride'] = '<mdspan>',
  ['std::mdspan'] = '<mdspan>',
  ['std::strided_slice'] = '<mdspan>',
  ['std::submdspan'] = '<mdspan>',
  ['std::submdspan_extents'] = '<mdspan>',
  ['std::submdspan_mapping_result'] = '<mdspan>',
  ['std::priority_queue'] = '<queue>',
  ['std::queue'] = '<queue>',
  ['std::multiset'] = '<set>',
  ['std::set'] = '<set>',
  ['std::as_bytes'] = '<span>',
  ['std::dynamic_extent'] = '<span>',
  ['std::span'] = '<span>',
  ['std::stack'] = '<stack>',
  ['std::unordered_map'] = '<unordered_map>',
  ['std::unordered_multimap'] = '<unordered_map>',
  ['std::unordered_multiset'] = '<unordered_set>',
  ['std::unordered_set'] = '<unordered_set>',
  ['std::vector'] = '<vector>',
  ['std::advance'] = '<iterator>',
  ['std::back_insert_iterator'] = '<iterator>',
  ['std::back_inserter'] = '<iterator>',
  ['std::basic_const_iterator'] = '<iterator>',
  ['std::bidirectional_iterator'] = '<iterator>',
  ['std::common_iterator'] = '<iterator>',
  ['std::const_iterator'] = '<iterator>',
  ['std::const_sentinel'] = '<iterator>',
  ['std::contiguous_iterator'] = '<iterator>',
  ['std::counted_iterator'] = '<iterator>',
  ['std::default_sentinel'] = '<iterator>',
  ['std::default_sentinel_t'] = '<iterator>',
  ['std::distance'] = '<iterator>',
  ['std::forward_iterator'] = '<iterator>',
  ['std::front_insert_iterator'] = '<iterator>',
  ['std::front_inserter'] = '<iterator>',
  ['std::incrementable'] = '<iterator>',
  ['std::incrementable_traits'] = '<iterator>',
  ['std::indirect_binary_predicate'] = '<iterator>',
  ['std::indirect_equivalence_relation'] = '<iterator>',
  ['std::indirect_result_t'] = '<iterator>',
  ['std::indirect_strict_weak_order'] = '<iterator>',
  ['std::indirect_unary_predicate'] = '<iterator>',
  ['std::indirectly_comparable'] = '<iterator>',
  ['std::indirectly_copyable'] = '<iterator>',
  ['std::indirectly_copyable_storable'] = '<iterator>',
  ['std::indirectly_movable'] = '<iterator>',
  ['std::indirectly_movable_storable'] = '<iterator>',
  ['std::indirectly_readable'] = '<iterator>',
  ['std::indirectly_readable_traits'] = '<iterator>',
  ['std::indirectly_swappable'] = '<iterator>',
  ['std::indirectly_unary_invocable'] = '<iterator>',
  ['std::indirectly_writable'] = '<iterator>',
  ['std::input_iterator'] = '<iterator>',
  ['std::input_iterator_tag'] = '<iterator>',
  ['std::input_or_output_iterator'] = '<iterator>',
  ['std::insert_iterator'] = '<iterator>',
  ['std::inserter'] = '<iterator>',
  ['std::istream_iterator'] = '<iterator>',
  ['std::istreambuf_iterator'] = '<iterator>',
  ['std::iter_move'] = '<iterator>',
  ['std::iter_value_t'] = '<iterator>',
  ['std::iterator'] = '<iterator>',
  ['std::iterator_traits'] = '<iterator>',
  ['std::make_const_iterator'] = '<iterator>',
  ['std::make_const_sentinel'] = '<iterator>',
  ['std::make_move_iterator'] = '<iterator>',
  ['std::make_reverse_iterator'] = '<iterator>',
  ['std::mergeable'] = '<iterator>',
  ['std::move_iterator'] = '<iterator>',
  ['std::move_sentinel'] = '<iterator>',
  ['std::next'] = '<iterator>',
  ['std::ostream_iterator'] = '<iterator>',
  ['std::ostreambuf_iterator'] = '<iterator>',
  ['std::output_iterator'] = '<iterator>',
  ['std::permutable'] = '<iterator>',
  ['std::prev'] = '<iterator>',
  ['std::projected'] = '<iterator>',
  ['std::projected_value_t'] = '<iterator>',
  ['std::random_access_iterator'] = '<iterator>',
  ['std::ranges::advance'] = '<iterator>',
  ['std::ranges::distance'] = '<iterator>',
  ['std::ranges::next'] = '<iterator>',
  ['std::ranges::prev'] = '<iterator>',
  ['std::reverse_iterator'] = '<iterator>',
  ['std::sentinel_for'] = '<iterator>',
  ['std::sized_sentinel_for'] = '<iterator>',
  ['std::sortable'] = '<iterator>',
  ['std::unreachable_sentinel'] = '<iterator>',
  ['std::unreachable_sentinel_t'] = '<iterator>',
  ['std::weakly_incrementable'] = '<iterator>',
  ['std::generator'] = '<generator>',
  ['std::from_range_t'] = '<ranges>',
  ['std::ranges::adjacent_transform_view'] = '<ranges>',
  ['std::ranges::adjacent_view'] = '<ranges>',
  ['std::ranges::as_const_view'] = '<ranges>',
  ['std::ranges::as_rvalue_view'] = '<ranges>',
  ['std::ranges::basic_istream_view'] = '<ranges>',
  ['std::ranges::begin'] = '<ranges>',
  ['std::ranges::bidirectional_range'] = '<ranges>',
  ['std::ranges::borrowed_iterator_t'] = '<ranges>',
  ['std::ranges::borrowed_range'] = '<ranges>',
  ['std::ranges::cartesian_product_view'] = '<ranges>',
  ['std::ranges::cbegin'] = '<ranges>',
  ['std::ranges::cdata'] = '<ranges>',
  ['std::ranges::cend'] = '<ranges>',
  ['std::ranges::chunk_by_view'] = '<ranges>',
  ['std::ranges::chunk_view'] = '<ranges>',
  ['std::ranges::common_range'] = '<ranges>',
  ['std::ranges::common_view'] = '<ranges>',
  ['std::ranges::concat_view'] = '<ranges>',
  ['std::ranges::constant_range'] = '<ranges>',
  ['std::ranges::contiguous_range'] = '<ranges>',
  ['std::ranges::crbegin'] = '<ranges>',
  ['std::ranges::crend'] = '<ranges>',
  ['std::ranges::dangling'] = '<ranges>',
  ['std::ranges::data'] = '<ranges>',
  ['std::ranges::drop_view'] = '<ranges>',
  ['std::ranges::drop_while_view'] = '<ranges>',
  ['std::ranges::elements_of'] = '<ranges>',
  ['std::ranges::elements_view'] = '<ranges>',
  ['std::ranges::empty'] = '<ranges>',
  ['std::ranges::empty_view'] = '<ranges>',
  ['std::ranges::end'] = '<ranges>',
  ['std::ranges::enumerate_view'] = '<ranges>',
  ['std::ranges::filter_view'] = '<ranges>',
  ['std::ranges::forward_range'] = '<ranges>',
  ['std::ranges::input_range'] = '<ranges>',
  ['std::ranges::iota_view'] = '<ranges>',
  ['std::ranges::iterator_t'] = '<ranges>',
  ['std::ranges::join_view'] = '<ranges>',
  ['std::ranges::join_with_view'] = '<ranges>',
  ['std::ranges::keys_view'] = '<ranges>',
  ['std::ranges::lazy_split_view'] = '<ranges>',
  ['std::ranges::output_range'] = '<ranges>',
  ['std::ranges::owning_view'] = '<ranges>',
  ['std::ranges::random_access_range'] = '<ranges>',
  ['std::ranges::range'] = '<ranges>',
  ['std::ranges::range_adaptor_closure'] = '<ranges>',
  ['std::ranges::range_difference_t'] = '<ranges>',
  ['std::ranges::range_reference_t'] = '<ranges>',
  ['std::ranges::rbegin'] = '<ranges>',
  ['std::ranges::ref_view'] = '<ranges>',
  ['std::ranges::rend'] = '<ranges>',
  ['std::ranges::repeat_view'] = '<ranges>',
  ['std::ranges::reverse_view'] = '<ranges>',
  ['std::ranges::single_view'] = '<ranges>',
  ['std::ranges::size'] = '<ranges>',
  ['std::ranges::sized_range'] = '<ranges>',
  ['std::ranges::slide_view'] = '<ranges>',
  ['std::ranges::split_view'] = '<ranges>',
  ['std::ranges::ssize'] = '<ranges>',
  ['std::ranges::stride_view'] = '<ranges>',
  ['std::ranges::subrange'] = '<ranges>',
  ['std::ranges::subrange_kind'] = '<ranges>',
  ['std::ranges::take_view'] = '<ranges>',
  ['std::ranges::take_while_view'] = '<ranges>',
  ['std::ranges::to'] = '<ranges>',
  ['std::ranges::transform_view'] = '<ranges>',
  ['std::ranges::values_view'] = '<ranges>',
  ['std::ranges::view'] = '<ranges>',
  ['std::ranges::view_interface'] = '<ranges>',
  ['std::ranges::viewable_range'] = '<ranges>',
  ['std::ranges::zip_transform_view'] = '<ranges>',
  ['std::ranges::zip_view'] = '<ranges>',
  ['std::views::all_t'] = '<ranges>',
  ['std::views::counted'] = '<ranges>',
  ['std::adjacent_find'] = '<algorithm>',
  ['std::all_of'] = '<algorithm>',
  ['std::binary_search'] = '<algorithm>',
  ['std::clamp'] = '<algorithm>',
  ['std::copy'] = '<algorithm>',
  ['std::copy_backward'] = '<algorithm>',
  ['std::copy_n'] = '<algorithm>',
  ['std::count'] = '<algorithm>',
  ['std::equal'] = '<algorithm>',
  ['std::equal_range'] = '<algorithm>',
  ['std::fill'] = '<algorithm>',
  ['std::fill_n'] = '<algorithm>',
  ['std::find'] = '<algorithm>',
  ['std::find_end'] = '<algorithm>',
  ['std::find_first_of'] = '<algorithm>',
  ['std::for_each'] = '<algorithm>',
  ['std::for_each_n'] = '<algorithm>',
  ['std::generate'] = '<algorithm>',
  ['std::generate_n'] = '<algorithm>',
  ['std::includes'] = '<algorithm>',
  ['std::inplace_merge'] = '<algorithm>',
  ['std::is_heap'] = '<algorithm>',
  ['std::is_heap_until'] = '<algorithm>',
  ['std::is_partitioned'] = '<algorithm>',
  ['std::is_permutation'] = '<algorithm>',
  ['std::is_sorted'] = '<algorithm>',
  ['std::is_sorted_until'] = '<algorithm>',
  ['std::iter_swap'] = '<algorithm>',
  ['std::lexicographical_compare'] = '<algorithm>',
  ['std::lexicographical_compare_three_way'] = '<algorithm>',
  ['std::lower_bound'] = '<algorithm>',
  ['std::make_heap'] = '<algorithm>',
  ['std::max'] = '<algorithm>',
  ['std::max_element'] = '<algorithm>',
  ['std::merge'] = '<algorithm>',
  ['std::min'] = '<algorithm>',
  ['std::min_element'] = '<algorithm>',
  ['std::minmax'] = '<algorithm>',
  ['std::minmax_element'] = '<algorithm>',
  ['std::mismatch'] = '<algorithm>',
  ['std::move_backward'] = '<algorithm>',
  ['std::next_permutation'] = '<algorithm>',
  ['std::nth_element'] = '<algorithm>',
  ['std::partial_sort'] = '<algorithm>',
  ['std::partial_sort_copy'] = '<algorithm>',
  ['std::partition'] = '<algorithm>',
  ['std::partition_copy'] = '<algorithm>',
  ['std::partition_point'] = '<algorithm>',
  ['std::pop_heap'] = '<algorithm>',
  ['std::prev_permutation'] = '<algorithm>',
  ['std::push_heap'] = '<algorithm>',
  ['std::random_shuffle'] = '<algorithm>',
  ['std::ranges::adjacent_find'] = '<algorithm>',
  ['std::ranges::all_of'] = '<algorithm>',
  ['std::ranges::binary_search'] = '<algorithm>',
  ['std::ranges::clamp'] = '<algorithm>',
  ['std::ranges::contains'] = '<algorithm>',
  ['std::ranges::copy'] = '<algorithm>',
  ['std::ranges::copy_backward'] = '<algorithm>',
  ['std::ranges::copy_n'] = '<algorithm>',
  ['std::ranges::count'] = '<algorithm>',
  ['std::ranges::ends_with'] = '<algorithm>',
  ['std::ranges::equal'] = '<algorithm>',
  ['std::ranges::equal_range'] = '<algorithm>',
  ['std::ranges::fill'] = '<algorithm>',
  ['std::ranges::fill_n'] = '<algorithm>',
  ['std::ranges::find'] = '<algorithm>',
  ['std::ranges::find_end'] = '<algorithm>',
  ['std::ranges::find_first_of'] = '<algorithm>',
  ['std::ranges::find_last'] = '<algorithm>',
  ['std::ranges::fold_left'] = '<algorithm>',
  ['std::ranges::fold_left_first'] = '<algorithm>',
  ['std::ranges::fold_left_first_with_iter'] = '<algorithm>',
  ['std::ranges::fold_left_with_iter'] = '<algorithm>',
  ['std::ranges::fold_right'] = '<algorithm>',
  ['std::ranges::fold_right_last'] = '<algorithm>',
  ['std::ranges::for_each'] = '<algorithm>',
  ['std::ranges::for_each_n'] = '<algorithm>',
  ['std::ranges::generate'] = '<algorithm>',
  ['std::ranges::generate_n'] = '<algorithm>',
  ['std::ranges::in_found_result'] = '<algorithm>',
  ['std::ranges::in_fun_result'] = '<algorithm>',
  ['std::ranges::in_in_out_result'] = '<algorithm>',
  ['std::ranges::in_in_result'] = '<algorithm>',
  ['std::ranges::in_out_out_result'] = '<algorithm>',
  ['std::ranges::in_out_result'] = '<algorithm>',
  ['std::ranges::in_value_result'] = '<algorithm>',
  ['std::ranges::includes'] = '<algorithm>',
  ['std::ranges::inplace_merge'] = '<algorithm>',
  ['std::ranges::is_heap'] = '<algorithm>',
  ['std::ranges::is_heap_until'] = '<algorithm>',
  ['std::ranges::is_partitioned'] = '<algorithm>',
  ['std::ranges::is_permutation'] = '<algorithm>',
  ['std::ranges::is_sorted'] = '<algorithm>',
  ['std::ranges::is_sorted_until'] = '<algorithm>',
  ['std::ranges::lexicographical_compare'] = '<algorithm>',
  ['std::ranges::lower_bound'] = '<algorithm>',
  ['std::ranges::make_heap'] = '<algorithm>',
  ['std::ranges::max'] = '<algorithm>',
  ['std::ranges::max_element'] = '<algorithm>',
  ['std::ranges::merge'] = '<algorithm>',
  ['std::ranges::min'] = '<algorithm>',
  ['std::ranges::min_element'] = '<algorithm>',
  ['std::ranges::min_max_result'] = '<algorithm>',
  ['std::ranges::minmax'] = '<algorithm>',
  ['std::ranges::minmax_element'] = '<algorithm>',
  ['std::ranges::mismatch'] = '<algorithm>',
  ['std::ranges::move'] = '<algorithm>',
  ['std::ranges::move_backward'] = '<algorithm>',
  ['std::ranges::next_permutation'] = '<algorithm>',
  ['std::ranges::nth_element'] = '<algorithm>',
  ['std::ranges::out_value_result'] = '<algorithm>',
  ['std::ranges::partial_sort'] = '<algorithm>',
  ['std::ranges::partial_sort_copy'] = '<algorithm>',
  ['std::ranges::partition'] = '<algorithm>',
  ['std::ranges::partition_copy'] = '<algorithm>',
  ['std::ranges::partition_point'] = '<algorithm>',
  ['std::ranges::pop_heap'] = '<algorithm>',
  ['std::ranges::prev_permutation'] = '<algorithm>',
  ['std::ranges::push_heap'] = '<algorithm>',
  ['std::ranges::remove'] = '<algorithm>',
  ['std::ranges::remove_copy'] = '<algorithm>',
  ['std::ranges::replace'] = '<algorithm>',
  ['std::ranges::replace_copy'] = '<algorithm>',
  ['std::ranges::reverse'] = '<algorithm>',
  ['std::ranges::reverse_copy'] = '<algorithm>',
  ['std::ranges::rotate'] = '<algorithm>',
  ['std::ranges::rotate_copy'] = '<algorithm>',
  ['std::ranges::sample'] = '<algorithm>',
  ['std::ranges::search'] = '<algorithm>',
  ['std::ranges::search_n'] = '<algorithm>',
  ['std::ranges::set_difference'] = '<algorithm>',
  ['std::ranges::set_intersection'] = '<algorithm>',
  ['std::ranges::set_symmetric_difference'] = '<algorithm>',
  ['std::ranges::set_union'] = '<algorithm>',
  ['std::ranges::shift_left'] = '<algorithm>',
  ['std::ranges::shuffle'] = '<algorithm>',
  ['std::ranges::sort'] = '<algorithm>',
  ['std::ranges::sort_heap'] = '<algorithm>',
  ['std::ranges::stable_partition'] = '<algorithm>',
  ['std::ranges::stable_sort'] = '<algorithm>',
  ['std::ranges::starts_with'] = '<algorithm>',
  ['std::ranges::swap_ranges'] = '<algorithm>',
  ['std::ranges::transform'] = '<algorithm>',
  ['std::ranges::unique'] = '<algorithm>',
  ['std::ranges::unique_copy'] = '<algorithm>',
  ['std::ranges::upper_bound'] = '<algorithm>',
  ['std::remove'] = '<algorithm>',
  ['std::remove_copy'] = '<algorithm>',
  ['std::replace'] = '<algorithm>',
  ['std::replace_copy'] = '<algorithm>',
  ['std::reverse'] = '<algorithm>',
  ['std::reverse_copy'] = '<algorithm>',
  ['std::rotate'] = '<algorithm>',
  ['std::rotate_copy'] = '<algorithm>',
  ['std::sample'] = '<algorithm>',
  ['std::search'] = '<algorithm>',
  ['std::search_n'] = '<algorithm>',
  ['std::set_difference'] = '<algorithm>',
  ['std::set_intersection'] = '<algorithm>',
  ['std::set_symmetric_difference'] = '<algorithm>',
  ['std::set_union'] = '<algorithm>',
  ['std::shift_left'] = '<algorithm>',
  ['std::sort'] = '<algorithm>',
  ['std::sort_heap'] = '<algorithm>',
  ['std::stable_partition'] = '<algorithm>',
  ['std::stable_sort'] = '<algorithm>',
  ['std::swap_ranges'] = '<algorithm>',
  ['std::transform'] = '<algorithm>',
  ['std::unique'] = '<algorithm>',
  ['std::unique_copy'] = '<algorithm>',
  ['std::upper_bound'] = '<algorithm>',
  ['std::is_execution_policy'] = '<execution>',
  ['std::seq'] = '<execution>',
  ['std::sequenced_policy'] = '<execution>',
  ['std::bit_cast'] = '<bit>',
  ['std::bit_ceil'] = '<bit>',
  ['std::bit_floor'] = '<bit>',
  ['std::bit_width'] = '<bit>',
  ['std::byteswap'] = '<bit>',
  ['std::countl_one'] = '<bit>',
  ['std::countl_zero'] = '<bit>',
  ['std::countr_one'] = '<bit>',
  ['std::countr_zero'] = '<bit>',
  ['std::endian'] = '<bit>',
  ['std::has_single_bit'] = '<bit>',
  ['std::popcount'] = '<bit>',
  ['std::rotl'] = '<bit>',
  ['std::rotr'] = '<bit>',
  ['std::fenv_t'] = '<cfenv>',
  ['std::fexcept_t'] = '<cfenv>',
  ['std::acos'] = '<cmath>',
  ['std::acosh'] = '<cmath>',
  ['std::asin'] = '<cmath>',
  ['std::asinh'] = '<cmath>',
  ['std::assoc_laguerre'] = '<cmath>',
  ['std::assoc_legendre'] = '<cmath>',
  ['std::atan'] = '<cmath>',
  ['std::atan2'] = '<cmath>',
  ['std::atanh'] = '<cmath>',
  ['std::beta'] = '<cmath>',
  ['std::cbrt'] = '<cmath>',
  ['std::ceil'] = '<cmath>',
  ['std::comp_ellint_1'] = '<cmath>',
  ['std::comp_ellint_2'] = '<cmath>',
  ['std::comp_ellint_3'] = '<cmath>',
  ['std::copysign'] = '<cmath>',
  ['std::cos'] = '<cmath>',
  ['std::cosh'] = '<cmath>',
  ['std::cyl_bessel_i'] = '<cmath>',
  ['std::cyl_bessel_j'] = '<cmath>',
  ['std::cyl_bessel_k'] = '<cmath>',
  ['std::cyl_neumann'] = '<cmath>',
  ['std::double_t'] = '<cmath>',
  ['std::ellint_1'] = '<cmath>',
  ['std::ellint_2'] = '<cmath>',
  ['std::ellint_3'] = '<cmath>',
  ['std::erf'] = '<cmath>',
  ['std::erfc'] = '<cmath>',
  ['std::exp'] = '<cmath>',
  ['std::exp2'] = '<cmath>',
  ['std::expint'] = '<cmath>',
  ['std::expm1'] = '<cmath>',
  ['std::fdim'] = '<cmath>',
  ['std::float_t'] = '<cmath>',
  ['std::floor'] = '<cmath>',
  ['std::fma'] = '<cmath>',
  ['std::fmax'] = '<cmath>',
  ['std::fmin'] = '<cmath>',
  ['std::fmod'] = '<cmath>',
  ['std::fpclassify'] = '<cmath>',
  ['std::frexp'] = '<cmath>',
  ['std::hermite'] = '<cmath>',
  ['std::hypot'] = '<cmath>',
  ['std::ilogb'] = '<cmath>',
  ['std::isfinite'] = '<cmath>',
  ['std::isgreater'] = '<cmath>',
  ['std::isgreaterequal'] = '<cmath>',
  ['std::isinf'] = '<cmath>',
  ['std::isless'] = '<cmath>',
  ['std::islessequal'] = '<cmath>',
  ['std::islessgreater'] = '<cmath>',
  ['std::isnan'] = '<cmath>',
  ['std::isnormal'] = '<cmath>',
  ['std::isunordered'] = '<cmath>',
  ['std::laguerre'] = '<cmath>',
  ['std::ldexp'] = '<cmath>',
  ['std::legendre'] = '<cmath>',
  ['std::lerp'] = '<cmath>',
  ['std::lgamma'] = '<cmath>',
  ['std::log'] = '<cmath>',
  ['std::log10'] = '<cmath>',
  ['std::log1p'] = '<cmath>',
  ['std::log2'] = '<cmath>',
  ['std::logb'] = '<cmath>',
  ['std::math_errhandling'] = '<cmath>',
  ['std::modf'] = '<cmath>',
  ['std::nan'] = '<cmath>',
  ['std::nearbyint'] = '<cmath>',
  ['std::nextafter'] = '<cmath>',
  ['std::pow'] = '<cmath>',
  ['std::remainder'] = '<cmath>',
  ['std::remquo'] = '<cmath>',
  ['std::riemann_zeta'] = '<cmath>',
  ['std::rint'] = '<cmath>',
  ['std::round'] = '<cmath>',
  ['std::scalbn'] = '<cmath>',
  ['std::signbit'] = '<cmath>',
  ['std::sin'] = '<cmath>',
  ['std::sinh'] = '<cmath>',
  ['std::sph_bessel'] = '<cmath>',
  ['std::sph_legendre'] = '<cmath>',
  ['std::sph_neumann'] = '<cmath>',
  ['std::sqrt'] = '<cmath>',
  ['std::tan'] = '<cmath>',
  ['std::tanh'] = '<cmath>',
  ['std::tgamma'] = '<cmath>',
  ['std::trunc'] = '<cmath>',
  ['std::complex'] = '<complex>',
  ['std::add'] = '<linalg>',
  ['std::apply_givens_rotation'] = '<linalg>',
  ['std::column_major'] = '<linalg>',
  ['std::conjugate_transposed'] = '<linalg>',
  ['std::conjugated'] = '<linalg>',
  ['std::conjugated_accessor'] = '<linalg>',
  ['std::dot'] = '<linalg>',
  ['std::dotc'] = '<linalg>',
  ['std::hermitian_matrix_product'] = '<linalg>',
  ['std::hermitian_matrix_rank_1_update'] = '<linalg>',
  ['std::hermitian_matrix_rank_2_update'] = '<linalg>',
  ['std::hermitian_matrix_rank_2k_update'] = '<linalg>',
  ['std::hermitian_matrix_rank_k_update'] = '<linalg>',
  ['std::hermitian_matrix_vector_product'] = '<linalg>',
  ['std::implicit_unit_diagonal'] = '<linalg>',
  ['std::layout_blas_packed'] = '<linalg>',
  ['std::layout_transpose'] = '<linalg>',
  ['std::matrix_frob_norm'] = '<linalg>',
  ['std::matrix_inf_norm'] = '<linalg>',
  ['std::matrix_one_norm'] = '<linalg>',
  ['std::matrix_product'] = '<linalg>',
  ['std::matrix_rank_1_update'] = '<linalg>',
  ['std::matrix_rank_1_update_c'] = '<linalg>',
  ['std::matrix_vector_product'] = '<linalg>',
  ['std::scale'] = '<linalg>',
  ['std::scaled'] = '<linalg>',
  ['std::scaled_accessor'] = '<linalg>',
  ['std::setup_givens_rotation'] = '<linalg>',
  ['std::swap_elements'] = '<linalg>',
  ['std::symmetric_matrix_product'] = '<linalg>',
  ['std::symmetric_matrix_rank_1_update'] = '<linalg>',
  ['std::symmetric_matrix_rank_2k_update'] = '<linalg>',
  ['std::symmetric_matrix_rank_k_update'] = '<linalg>',
  ['std::symmetric_matrix_vector_product'] = '<linalg>',
  ['std::transposed'] = '<linalg>',
  ['std::triangular_matrix_matrix_left_solve'] = '<linalg>',
  ['std::triangular_matrix_product'] = '<linalg>',
  ['std::triangular_matrix_vector_product'] = '<linalg>',
  ['std::triangular_matrix_vector_solve'] = '<linalg>',
  ['std::upper_triangle'] = '<linalg>',
  ['std::vector_abs_sum'] = '<linalg>',
  ['std::vector_idx_abs_max'] = '<linalg>',
  ['std::vector_sum_of_squares'] = '<linalg>',
  ['std::vector_two_norm'] = '<linalg>',
  ['std::accumulate'] = '<numeric>',
  ['std::add_sat'] = '<numeric>',
  ['std::adjacent_difference'] = '<numeric>',
  ['std::div_sat'] = '<numeric>',
  ['std::exclusive_scan'] = '<numeric>',
  ['std::gcd'] = '<numeric>',
  ['std::inclusive_scan'] = '<numeric>',
  ['std::inner_product'] = '<numeric>',
  ['std::iota'] = '<numeric>',
  ['std::lcm'] = '<numeric>',
  ['std::midpoint'] = '<numeric>',
  ['std::mul_sat'] = '<numeric>',
  ['std::partial_sum'] = '<numeric>',
  ['std::ranges::iota'] = '<numeric>',
  ['std::reduce'] = '<numeric>',
  ['std::saturate_cast'] = '<numeric>',
  ['std::sub_sat'] = '<numeric>',
  ['std::transform_exclusive_scan'] = '<numeric>',
  ['std::transform_inclusive_scan'] = '<numeric>',
  ['std::transform_reduce'] = '<numeric>',
  ['std::bernoulli_distribution'] = '<random>',
  ['std::binomial_distribution'] = '<random>',
  ['std::cauchy_distribution'] = '<random>',
  ['std::chi_squared_distribution'] = '<random>',
  ['std::default_random_engine'] = '<random>',
  ['std::discard_block_engine'] = '<random>',
  ['std::discrete_distribution'] = '<random>',
  ['std::exponential_distribution'] = '<random>',
  ['std::extreme_value_distribution'] = '<random>',
  ['std::fisher_f_distribution'] = '<random>',
  ['std::gamma_distribution'] = '<random>',
  ['std::generate_canonical'] = '<random>',
  ['std::geometric_distribution'] = '<random>',
  ['std::independent_bits_engine'] = '<random>',
  ['std::knuth_b'] = '<random>',
  ['std::linear_congruential_engine'] = '<random>',
  ['std::lognormal_distribution'] = '<random>',
  ['std::mersenne_twister_engine'] = '<random>',
  ['std::minstd_rand'] = '<random>',
  ['std::minstd_rand0'] = '<random>',
  ['std::mt19937'] = '<random>',
  ['std::mt19937_64'] = '<random>',
  ['std::negative_binomial_distribution'] = '<random>',
  ['std::normal_distribution'] = '<random>',
  ['std::philox4x32'] = '<random>',
  ['std::philox4x64'] = '<random>',
  ['std::philox_engine'] = '<random>',
  ['std::piecewise_constant_distribution'] = '<random>',
  ['std::piecewise_linear_distribution'] = '<random>',
  ['std::poisson_distribution'] = '<random>',
  ['std::random_device'] = '<random>',
  ['std::ranges::generate_random'] = '<random>',
  ['std::ranlux24'] = '<random>',
  ['std::ranlux24_base'] = '<random>',
  ['std::ranlux48'] = '<random>',
  ['std::ranlux48_base'] = '<random>',
  ['std::seed_seq'] = '<random>',
  ['std::shuffle_order_engine'] = '<random>',
  ['std::student_t_distribution'] = '<random>',
  ['std::subtract_with_carry_engine'] = '<random>',
  ['std::uniform_int_distribution'] = '<random>',
  ['std::uniform_random_bit_generator'] = '<random>',
  ['std::uniform_real_distribution'] = '<random>',
  ['std::weibull_distribution'] = '<random>',
  ['std::atto'] = '<ratio>',
  ['std::centi'] = '<ratio>',
  ['std::deca'] = '<ratio>',
  ['std::deci'] = '<ratio>',
  ['std::exa'] = '<ratio>',
  ['std::femto'] = '<ratio>',
  ['std::giga'] = '<ratio>',
  ['std::hecto'] = '<ratio>',
  ['std::kilo'] = '<ratio>',
  ['std::mega'] = '<ratio>',
  ['std::micro'] = '<ratio>',
  ['std::milli'] = '<ratio>',
  ['std::nano'] = '<ratio>',
  ['std::peta'] = '<ratio>',
  ['std::pico'] = '<ratio>',
  ['std::ratio'] = '<ratio>',
  ['std::ratio_add'] = '<ratio>',
  ['std::ratio_divide'] = '<ratio>',
  ['std::ratio_equal'] = '<ratio>',
  ['std::ratio_greater'] = '<ratio>',
  ['std::ratio_greater_equal'] = '<ratio>',
  ['std::ratio_less'] = '<ratio>',
  ['std::ratio_less_equal'] = '<ratio>',
  ['std::ratio_multiply'] = '<ratio>',
  ['std::ratio_not_equal'] = '<ratio>',
  ['std::ratio_subtract'] = '<ratio>',
  ['std::tera'] = '<ratio>',
  ['std::gslice'] = '<valarray>',
  ['std::gslice_array'] = '<valarray>',
  ['std::indirect_array'] = '<valarray>',
  ['std::mask_array'] = '<valarray>',
  ['std::slice'] = '<valarray>',
  ['std::slice_array'] = '<valarray>',
  ['std::valarray'] = '<valarray>',
  ['std::lconv'] = '<clocale>',
  ['std::localeconv'] = '<clocale>',
  ['std::setlocale'] = '<clocale>',
  ['std::codecvt_mode'] = '<codecvt>',
  ['std::codecvt_utf16'] = '<codecvt>',
  ['std::codecvt_utf8'] = '<codecvt>',
  ['std::codecvt_utf8_utf16'] = '<codecvt>',
  ['std::codecvt'] = '<locale>',
  ['std::codecvt_base'] = '<locale>',
  ['std::codecvt_byname'] = '<locale>',
  ['std::collate'] = '<locale>',
  ['std::collate_byname'] = '<locale>',
  ['std::ctype'] = '<locale>',
  ['std::ctype_base'] = '<locale>',
  ['std::ctype_byname'] = '<locale>',
  ['std::has_facet'] = '<locale>',
  ['std::locale'] = '<locale>',
  ['std::messages'] = '<locale>',
  ['std::messages_base'] = '<locale>',
  ['std::messages_byname'] = '<locale>',
  ['std::money_base'] = '<locale>',
  ['std::money_get'] = '<locale>',
  ['std::money_put'] = '<locale>',
  ['std::moneypunct'] = '<locale>',
  ['std::moneypunct_byname'] = '<locale>',
  ['std::num_get'] = '<locale>',
  ['std::num_put'] = '<locale>',
  ['std::numpunct'] = '<locale>',
  ['std::numpunct_byname'] = '<locale>',
  ['std::time_base'] = '<locale>',
  ['std::time_get'] = '<locale>',
  ['std::time_get_byname'] = '<locale>',
  ['std::time_put'] = '<locale>',
  ['std::time_put_byname'] = '<locale>',
  ['std::use_facet'] = '<locale>',
  ['std::wbuffer_convert'] = '<locale>',
  ['std::wstring_convert'] = '<locale>',
  ['std::text_encoding'] = '<text_encoding>',
  ['std::L_tmpnam'] = '<cstdio>',
  ['std::clearerr'] = '<cstdio>',
  ['std::fclose'] = '<cstdio>',
  ['std::feof'] = '<cstdio>',
  ['std::ferror'] = '<cstdio>',
  ['std::fflush'] = '<cstdio>',
  ['std::fgetc'] = '<cstdio>',
  ['std::fgetpos'] = '<cstdio>',
  ['std::fgets'] = '<cstdio>',
  ['std::fopen'] = '<cstdio>',
  ['std::fpos_t'] = '<cstdio>',
  ['std::fputc'] = '<cstdio>',
  ['std::fputs'] = '<cstdio>',
  ['std::fread'] = '<cstdio>',
  ['std::freopen'] = '<cstdio>',
  ['std::fseek'] = '<cstdio>',
  ['std::fsetpos'] = '<cstdio>',
  ['std::ftell'] = '<cstdio>',
  ['std::fwrite'] = '<cstdio>',
  ['std::getchar'] = '<cstdio>',
  ['std::gets'] = '<cstdio>',
  ['std::perror'] = '<cstdio>',
  ['std::printf'] = '<cstdio>',
  ['std::putchar'] = '<cstdio>',
  ['std::puts'] = '<cstdio>',
  ['std::rename'] = '<cstdio>',
  ['std::rewind'] = '<cstdio>',
  ['std::scanf'] = '<cstdio>',
  ['std::setbuf'] = '<cstdio>',
  ['std::setvbuf'] = '<cstdio>',
  ['std::stdin'] = '<cstdio>',
  ['std::tmpfile'] = '<cstdio>',
  ['std::tmpnam'] = '<cstdio>',
  ['std::ungetc'] = '<cstdio>',
  ['std::vprintf'] = '<cstdio>',
  ['std::vscanf'] = '<cstdio>',
  ['std::basic_filebuf'] = '<fstream>',
  ['std::basic_fstream'] = '<fstream>',
  ['std::basic_ifstream'] = '<fstream>',
  ['std::basic_ofstream'] = '<fstream>',
  ['std::filebuf'] = '<fstream>',
  ['std::fstream'] = '<fstream>',
  ['std::ifstream'] = '<fstream>',
  ['std::ofstream'] = '<fstream>',
  ['std::wfilebuf'] = '<fstream>',
  ['std::wfstream'] = '<fstream>',
  ['std::wifstream'] = '<fstream>',
  ['std::wofstream'] = '<fstream>',
  ['std::get_money'] = '<iomanip>',
  ['std::get_time'] = '<iomanip>',
  ['std::put_money'] = '<iomanip>',
  ['std::put_time'] = '<iomanip>',
  ['std::quoted'] = '<iomanip>',
  ['std::resetiosflags'] = '<iomanip>',
  ['std::setbase'] = '<iomanip>',
  ['std::setfill'] = '<iomanip>',
  ['std::setiosflags'] = '<iomanip>',
  ['std::setprecision'] = '<iomanip>',
  ['std::setw'] = '<iomanip>',
  ['std::basic_ios'] = '<ios>',
  ['std::boolalpha'] = '<ios>',
  ['std::dec'] = '<ios>',
  ['std::fixed'] = '<ios>',
  ['std::fpos'] = '<ios>',
  ['std::internal'] = '<ios>',
  ['std::io_errc'] = '<ios>',
  ['std::ios_base'] = '<ios>',
  ['std::iostream_category'] = '<ios>',
  ['std::showbase'] = '<ios>',
  ['std::showpoint'] = '<ios>',
  ['std::showpos'] = '<ios>',
  ['std::skipws'] = '<ios>',
  ['std::streamoff'] = '<ios>',
  ['std::streamsize'] = '<ios>',
  ['std::unitbuf'] = '<ios>',
  ['std::uppercase'] = '<ios>',
  ['std::cerr'] = '<iostream>',
  ['std::cin'] = '<iostream>',
  ['std::clog'] = '<iostream>',
  ['std::cout'] = '<iostream>',
  ['std::basic_iostream'] = '<istream>',
  ['std::basic_istream'] = '<istream>',
  ['std::ws'] = '<istream>',
  ['std::basic_ostream'] = '<ostream>',
  ['std::emit_on_flush'] = '<ostream>',
  ['std::endl'] = '<ostream>',
  ['std::ends'] = '<ostream>',
  ['std::flush'] = '<ostream>',
  ['std::flush_emit'] = '<ostream>',
  ['std::print'] = '<print>',
  ['std::println'] = '<print>',
  ['std::vprint_nonunicode'] = '<print>',
  ['std::vprint_unicode'] = '<print>',
  ['std::basic_ispanstream'] = '<spanstream>',
  ['std::basic_ospanstream'] = '<spanstream>',
  ['std::basic_spanbuf'] = '<spanstream>',
  ['std::basic_spanstream'] = '<spanstream>',
  ['std::ispanstream'] = '<spanstream>',
  ['std::ospanstream'] = '<spanstream>',
  ['std::spanbuf'] = '<spanstream>',
  ['std::spanstream'] = '<spanstream>',
  ['std::wispanstream'] = '<spanstream>',
  ['std::wospanstream'] = '<spanstream>',
  ['std::wspanbuf'] = '<spanstream>',
  ['std::wspanstream'] = '<spanstream>',
  ['std::basic_istringstream'] = '<sstream>',
  ['std::basic_ostringstream'] = '<sstream>',
  ['std::basic_stringbuf'] = '<sstream>',
  ['std::basic_stringstream'] = '<sstream>',
  ['std::istringstream'] = '<sstream>',
  ['std::ostringstream'] = '<sstream>',
  ['std::stringbuf'] = '<sstream>',
  ['std::stringstream'] = '<sstream>',
  ['std::wistringstream'] = '<sstream>',
  ['std::wostringstream'] = '<sstream>',
  ['std::wstringbuf'] = '<sstream>',
  ['std::wstringstream'] = '<sstream>',
  ['std::basic_streambuf'] = '<streambuf>',
  ['std::streambuf'] = '<streambuf>',
  ['std::wstreambuf'] = '<streambuf>',
  ['std::istrstream'] = '<strstream>',
  ['std::ostrstream'] = '<strstream>',
  ['std::strstream'] = '<strstream>',
  ['std::strstreambuf'] = '<strstream>',
  ['std::basic_osyncstream'] = '<syncstream>',
  ['std::basic_syncbuf'] = '<syncstream>',
  ['std::osyncstream'] = '<syncstream>',
  ['std::syncbuf'] = '<syncstream>',
  ['std::wosyncstream'] = '<syncstream>',
  ['std::wsyncbuf'] = '<syncstream>',
  ['std::filesystem::absolute'] = '<filesystem>',
  ['std::filesystem::canonical'] = '<filesystem>',
  ['std::filesystem::copy_file'] = '<filesystem>',
  ['std::filesystem::copy_options'] = '<filesystem>',
  ['std::filesystem::copy_symlink'] = '<filesystem>',
  ['std::filesystem::create_directory'] = '<filesystem>',
  ['std::filesystem::create_hard_link'] = '<filesystem>',
  ['std::filesystem::create_symlink'] = '<filesystem>',
  ['std::filesystem::current_path'] = '<filesystem>',
  ['std::filesystem::directory_entry'] = '<filesystem>',
  ['std::filesystem::directory_iterator'] = '<filesystem>',
  ['std::filesystem::directory_options'] = '<filesystem>',
  ['std::filesystem::equivalent'] = '<filesystem>',
  ['std::filesystem::exists'] = '<filesystem>',
  ['std::filesystem::file_size'] = '<filesystem>',
  ['std::filesystem::file_status'] = '<filesystem>',
  ['std::filesystem::file_time_type'] = '<filesystem>',
  ['std::filesystem::file_type'] = '<filesystem>',
  ['std::filesystem::filesystem_error'] = '<filesystem>',
  ['std::filesystem::hard_link_count'] = '<filesystem>',
  ['std::filesystem::is_block_file'] = '<filesystem>',
  ['std::filesystem::is_character_file'] = '<filesystem>',
  ['std::filesystem::is_directory'] = '<filesystem>',
  ['std::filesystem::is_empty'] = '<filesystem>',
  ['std::filesystem::is_fifo'] = '<filesystem>',
  ['std::filesystem::is_other'] = '<filesystem>',
  ['std::filesystem::is_regular_file'] = '<filesystem>',
  ['std::filesystem::is_socket'] = '<filesystem>',
  ['std::filesystem::is_symlink'] = '<filesystem>',
  ['std::filesystem::last_write_time'] = '<filesystem>',
  ['std::filesystem::path'] = '<filesystem>',
  ['std::filesystem::perm_options'] = '<filesystem>',
  ['std::filesystem::permissions'] = '<filesystem>',
  ['std::filesystem::perms'] = '<filesystem>',
  ['std::filesystem::read_symlink'] = '<filesystem>',
  ['std::filesystem::recursive_directory_iterator'] = '<filesystem>',
  ['std::filesystem::relative'] = '<filesystem>',
  ['std::filesystem::rename'] = '<filesystem>',
  ['std::filesystem::resize_file'] = '<filesystem>',
  ['std::filesystem::space'] = '<filesystem>',
  ['std::filesystem::space_info'] = '<filesystem>',
  ['std::filesystem::status'] = '<filesystem>',
  ['std::filesystem::status_known'] = '<filesystem>',
  ['std::filesystem::temp_directory_path'] = '<filesystem>',
  ['std::filesystem::u8path'] = '<filesystem>',
  ['std::basic_regex'] = '<regex>',
  ['std::error_type'] = '<regex>',
  ['std::match_flag_type'] = '<regex>',
  ['std::match_results'] = '<regex>',
  ['std::regex_error'] = '<regex>',
  ['std::regex_iterator'] = '<regex>',
  ['std::regex_match'] = '<regex>',
  ['std::regex_replace'] = '<regex>',
  ['std::regex_search'] = '<regex>',
  ['std::regex_token_iterator'] = '<regex>',
  ['std::regex_traits'] = '<regex>',
  ['std::sub_match'] = '<regex>',
  ['std::syntax_option_type'] = '<regex>',
  ['std::atomic'] = '<atomic>',
  ['std::atomic_bool'] = '<atomic>',
  ['std::atomic_char'] = '<atomic>',
  ['std::atomic_char16_t'] = '<atomic>',
  ['std::atomic_char32_t'] = '<atomic>',
  ['std::atomic_char8_t'] = '<atomic>',
  ['std::atomic_compare_exchange_weak'] = '<atomic>',
  ['std::atomic_exchange'] = '<atomic>',
  ['std::atomic_fetch_add'] = '<atomic>',
  ['std::atomic_fetch_and'] = '<atomic>',
  ['std::atomic_fetch_max'] = '<atomic>',
  ['std::atomic_fetch_min'] = '<atomic>',
  ['std::atomic_fetch_or'] = '<atomic>',
  ['std::atomic_fetch_sub'] = '<atomic>',
  ['std::atomic_fetch_xor'] = '<atomic>',
  ['std::atomic_flag'] = '<atomic>',
  ['std::atomic_flag_clear'] = '<atomic>',
  ['std::atomic_flag_notify_all'] = '<atomic>',
  ['std::atomic_flag_notify_one'] = '<atomic>',
  ['std::atomic_flag_test'] = '<atomic>',
  ['std::atomic_flag_test_and_set'] = '<atomic>',
  ['std::atomic_flag_wait'] = '<atomic>',
  ['std::atomic_init'] = '<atomic>',
  ['std::atomic_int'] = '<atomic>',
  ['std::atomic_int16_t'] = '<atomic>',
  ['std::atomic_int32_t'] = '<atomic>',
  ['std::atomic_int64_t'] = '<atomic>',
  ['std::atomic_int8_t'] = '<atomic>',
  ['std::atomic_int_fast16_t'] = '<atomic>',
  ['std::atomic_int_fast32_t'] = '<atomic>',
  ['std::atomic_int_fast64_t'] = '<atomic>',
  ['std::atomic_int_fast8_t'] = '<atomic>',
  ['std::atomic_int_least16_t'] = '<atomic>',
  ['std::atomic_int_least32_t'] = '<atomic>',
  ['std::atomic_int_least64_t'] = '<atomic>',
  ['std::atomic_int_least8_t'] = '<atomic>',
  ['std::atomic_intmax_t'] = '<atomic>',
  ['std::atomic_intptr_t'] = '<atomic>',
  ['std::atomic_is_lock_free'] = '<atomic>',
  ['std::atomic_llong'] = '<atomic>',
  ['std::atomic_load'] = '<atomic>',
  ['std::atomic_long'] = '<atomic>',
  ['std::atomic_notify_all'] = '<atomic>',
  ['std::atomic_notify_one'] = '<atomic>',
  ['std::atomic_ptrdiff_t'] = '<atomic>',
  ['std::atomic_ref'] = '<atomic>',
  ['std::atomic_schar'] = '<atomic>',
  ['std::atomic_short'] = '<atomic>',
  ['std::atomic_signal_fence'] = '<atomic>',
  ['std::atomic_signed_lock_free'] = '<atomic>',
  ['std::atomic_size_t'] = '<atomic>',
  ['std::atomic_store'] = '<atomic>',
  ['std::atomic_thread_fence'] = '<atomic>',
  ['std::atomic_uchar'] = '<atomic>',
  ['std::atomic_uint'] = '<atomic>',
  ['std::atomic_uint16_t'] = '<atomic>',
  ['std::atomic_uint32_t'] = '<atomic>',
  ['std::atomic_uint64_t'] = '<atomic>',
  ['std::atomic_uint8_t'] = '<atomic>',
  ['std::atomic_uint_fast16_t'] = '<atomic>',
  ['std::atomic_uint_fast32_t'] = '<atomic>',
  ['std::atomic_uint_fast64_t'] = '<atomic>',
  ['std::atomic_uint_fast8_t'] = '<atomic>',
  ['std::atomic_uint_least16_t'] = '<atomic>',
  ['std::atomic_uint_least32_t'] = '<atomic>',
  ['std::atomic_uint_least64_t'] = '<atomic>',
  ['std::atomic_uint_least8_t'] = '<atomic>',
  ['std::atomic_uintmax_t'] = '<atomic>',
  ['std::atomic_uintptr_t'] = '<atomic>',
  ['std::atomic_ullong'] = '<atomic>',
  ['std::atomic_ulong'] = '<atomic>',
  ['std::atomic_unsigned_lock_free'] = '<atomic>',
  ['std::atomic_ushort'] = '<atomic>',
  ['std::atomic_wait'] = '<atomic>',
  ['std::atomic_wchar_t'] = '<atomic>',
  ['std::kill_dependency'] = '<atomic>',
  ['std::memory_order'] = '<atomic>',
  ['std::barrier'] = '<barrier>',
  ['std::condition_variable'] = '<condition_variable>',
  ['std::condition_variable_any'] = '<condition_variable>',
  ['std::cv_status'] = '<condition_variable>',
  ['std::notify_all_at_thread_exit'] = '<condition_variable>',
  ['std::async'] = '<future>',
  ['std::future'] = '<future>',
  ['std::future_category'] = '<future>',
  ['std::future_errc'] = '<future>',
  ['std::future_error'] = '<future>',
  ['std::future_status'] = '<future>',
  ['std::launch'] = '<future>',
  ['std::packaged_task'] = '<future>',
  ['std::promise'] = '<future>',
  ['std::shared_future'] = '<future>',
  ['std::hazard_pointer'] = '<hazard_pointer>',
  ['std::hazard_pointer_obj_base'] = '<hazard_pointer>',
  ['std::make_hazard_pointer'] = '<hazard_pointer>',
  ['std::latch'] = '<latch>',
  ['std::call_once'] = '<mutex>',
  ['std::defer_lock'] = '<mutex>',
  ['std::lock'] = '<mutex>',
  ['std::lock_guard'] = '<mutex>',
  ['std::mutex'] = '<mutex>',
  ['std::once_flag'] = '<mutex>',
  ['std::recursive_mutex'] = '<mutex>',
  ['std::recursive_timed_mutex'] = '<mutex>',
  ['std::scoped_lock'] = '<mutex>',
  ['std::timed_mutex'] = '<mutex>',
  ['std::try_lock'] = '<mutex>',
  ['std::unique_lock'] = '<mutex>',
  ['std::rcu_barrier'] = '<rcu>',
  ['std::rcu_default_domain'] = '<rcu>',
  ['std::rcu_domain'] = '<rcu>',
  ['std::rcu_obj_base'] = '<rcu>',
  ['std::rcu_retire'] = '<rcu>',
  ['std::rcu_synchronize'] = '<rcu>',
  ['std::binary_semaphore'] = '<semaphore>',
  ['std::counting_semaphore'] = '<semaphore>',
  ['std::shared_lock'] = '<shared_mutex>',
  ['std::shared_mutex'] = '<shared_mutex>',
  ['std::shared_timed_mutex'] = '<shared_mutex>',
  ['std::nostopstate'] = '<stop_token>',
  ['std::stop_callback'] = '<stop_token>',
  ['std::stop_source'] = '<stop_token>',
  ['std::stop_token'] = '<stop_token>',
  ['std::get_id'] = '<thread>',
  ['std::jthread'] = '<thread>',
  ['std::sleep_for'] = '<thread>',
  ['std::sleep_until'] = '<thread>',
  ['std::this_thread'] = '<thread>',
  ['std::thread'] = '<thread>',
  ['std::yield'] = '<thread>',
  ['std::chrono'] = '<chrono>',
  ['std::views'] = '<ranges>',
  ['std::filesystem'] = '<filesystem>',
}
