# sh.snippets - Snippets for sh file type

# Create a temp file and use trap to ensure that it is removed
snippet temp "Tempfile"
${1:TMPFILE}="$(mktemp -t ${3:--suffix=${4:.SUFFIX}} ${2:`!p
snip.rv = re.sub(r'[^a-zA-Z]', '_', snip.fn) or "untitled"
`}.XXXXXX)"
${5:${6/(.+)/trap "/}${6:rm -f '$${1/.*\s//}'}${6/(.+)/" 0               # EXIT\n/}${7/(.+)/trap "/}${7:rm -f '$${1/.*\s//}'; exit 1}${7/(.+)/" 2       # INT\n/}${8/(.+)/trap "/}${8:rm -f '$${1/.*\s//}'; exit 1}${8/(.+)/" 1 15    # HUP TERM\n/}}

endsnippet

# --- If / Elif / Case ---

snippet if "if ... then (if)"
if ${2:[[ ${1:condition} ]]}; then
	${0:${VISUAL:#statements}}
fi
endsnippet

# will be triggered only if visual selection is not empty
snippet forin "for in array" "snip.visual_text" be
for ${1:i} in "${${2:arr}[@]}"
do
	${3:${VISUAL}}
done
endsnippet

snippet forin "for in array" b
for ${1:i} in "${${2:arr}[@]}"
do
	${3:echo "$$1"}
done
endsnippet

snippet forinf "for in file" b
shopt -s nullglob
for ${1:f} in ${4:${2:*}.${3:txt}}
do
	${5:echo "$$1"}
done
endsnippet

snippet fori "C-style for i" "snip.visual_text" be
for (( ${1:i}=1; $1<${2:10}+1; $1++ ));
do
	${3:${VISUAL}}
done
endsnippet

snippet fori "C-style for i" b
for (( ${1:i}=1; $1<${2:10}+1; $1++ ));
do
	${3:echo "$$1"}
done
endsnippet

snippet elif "elif .. (elif)"
elif ${2:[[ ${1:condition} ]]}; then
	${0:#statements}
endsnippet

snippet case "case .. esac (case)"
case ${1:word} in
	${2:pattern} )
		$0;;
esac
endsnippet

snippet fnc "A simple function" b
# ${2:Brief explanation of functionality}
# Parameter: ${4:None}
# Returns: ${5:None}
${1:functionName}() {
	${0:${VISUAL::}}
}
endsnippet

# Skeletons
snippet _skel "Skeleton for shell scripts" b
#!/bin/sh
## Maintainer: Simon Rydell
## Date created: `!v strftime("%b %d, %Y")`

$0
endsnippet
