# cmake.snippets - Snippets for cmake file type

snippet aex "add_executable(...)" b
add_library(${1:target_name} ${2:sources})$0
endsnippet

snippet alib "add_library(...)" b
add_library(${1:library_name} ${2:sources})$0
endsnippet

snippet tlinklib "target_link_libraries(...)" b
target_link_libraries(${1:target_name} ${2:PRIVATE} ${3:library_name})$0
endsnippet

snippet tincdir "target_include_directories(...)" b
target_link_libraries(${1:target_name} ${2:PRIVATE} ${3:dir_name})$0
endsnippet

# Skeletons
snippet _skel "Skeleton" b
cmake_minimum_required(VERSION `cmake --version | head -n 1 | sed 's/[ a-z]//g' | cut -d '.' -f1-2`)

project(${1:project_name}
        VERSION 0.1
        LANGUAGES CXX
)

# Require C++$2 and disable extensions for all targets
set(CMAKE_CXX_STANDARD          ${2:14})
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS        OFF)

# Export compile flags to compile_commands.json database.
# Useful for linters and autocompletion
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

add_executable(${3:executable_name} ${4:${5:main}.cpp})
endsnippet
