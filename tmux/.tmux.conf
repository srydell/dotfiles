# --------------------------------
# ------- tmux Config file -------
# --------------------------------

# Set the delay between prefix and command
set-option -s escape-time 1

# Key bindings in tmux prompt (prefix + :)
# Partial vim emulation is confusing
set-option -g status-keys 'emacs'

# Set mouse on
set-option -g mouse on

# Automatically renumber windows upon deletion
set-option -g renumber-windows on

# Do not allow renaming window/panes etc
set-option -g allow-rename off

# Scroll up history
set-option -g history-limit 10000

# Resize panes immediately for all clients
set-window-option -g aggressive-resize on

# Disable activity alerts
set-window-option -g monitor-activity off
set-option -g visual-activity off

# --------------------------------
# --------- Key bindings ---------
# --------------------------------

# Remap prefix from CTRL-b to CTRL-a
unbind C-b
set-option -g prefix C-a

# Use C-a in other programs by using it twice
bind-key C-a send-prefix

# Reload config file with r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# Set the current pane to fullscreen with prefix+f
unbind z
bind-key f resize-pane -Z

# Shortcut to synchronize panes toggle
bind-key S set-window-option synchronize-panes

# Put pane on a new window but keep focus
bind-key b break-pane -d

# Enable vi keys in copy mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle
# Can also send to clipboard managers
# bind-key -t copy-mode-vi 'y' copy-pipe "xclip -sel clip -i"

# Smart pane switching with awareness of Vim splits.
# True if current pane is running vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# True if current pane is running fzf
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# True if current pane is running weechat or irssi
is_irc="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(weechat|irssi)?$'"

# Movement integration between vim and tmux splits
# Move to panes with vim keys as ctrl followed by hjkl
# Relies on vim plugin 'christoomey/vim-tmux-navigator'
bind-key -n 'C-h' run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind-key -n 'C-j' run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 ($is_irc && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind-key -n 'C-k' run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 ($is_irc && tmux send-keys C-k) || \
                 tmux select-pane -U"

bind-key -n 'C-l' run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"

if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Paste buffer with P
unbind P
bind-key P paste-buffer

# Switch panes with h, j, k, l
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Switch window multiple times after only one prefix send (-r option)
bind-key -r n select-window -t :+
bind-key -r p select-window -t :-

# Resize panes with HJKL
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Split panes and do retain the current directory of existing pane
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Split pane
bind-key _ split-window -v
bind-key \\ split-window -h

# Disable confirm on killing pane/window
bind-key x kill-pane
bind-key X kill-window
unbind &

# --------------------------------
# ------- Colors & visuals -------
# --------------------------------

# ---@class GruvboxPalette
# Gruvbox.palette = {
#   dark0_hard = "#1d2021",
#   dark0 = "#282828",
#   dark0_soft = "#32302f",
#   dark1 = "#3c3836",
#   dark2 = "#504945",
#   dark3 = "#665c54",
#   dark4 = "#7c6f64",
#   light0_hard = "#f9f5d7",
#   light0 = "#fbf1c7",
#   light0_soft = "#f2e5bc",
#   light1 = "#ebdbb2",
#   light2 = "#d5c4a1",
#   light3 = "#bdae93",
#   light4 = "#a89984",
#   bright_red = "#fb4934",
#   bright_green = "#b8bb26",
#   bright_yellow = "#fabd2f",
#   bright_blue = "#83a598",
#   bright_purple = "#d3869b",
#   bright_aqua = "#8ec07c",
#   bright_orange = "#fe8019",
#   neutral_red = "#cc241d",
#   neutral_green = "#98971a",
#   neutral_yellow = "#d79921",
#   neutral_blue = "#458588",
#   neutral_purple = "#b16286",
#   neutral_aqua = "#689d6a",
#   neutral_orange = "#d65d0e",
#   faded_red = "#9d0006",
#   faded_green = "#79740e",
#   faded_yellow = "#b57614",
#   faded_blue = "#076678",
#   faded_purple = "#8f3f71",
#   faded_aqua = "#427b58",
#   faded_orange = "#af3a03",
#   dark_red_hard = "#792329",
#   dark_red = "#722529",
#   dark_red_soft = "#7b2c2f",
#   light_red_hard = "#fc9690",
#   light_red = "#fc9487",
#   light_red_soft = "#f78b7f",
#   dark_green_hard = "#5a633a",
#   dark_green = "#62693e",
#   dark_green_soft = "#686d43",
#   light_green_hard = "#d3d6a5",
#   light_green = "#d5d39b",
#   light_green_soft = "#cecb94",
#   dark_aqua_hard = "#3e4934",
#   dark_aqua = "#49503b",
#   dark_aqua_soft = "#525742",
#   light_aqua_hard = "#e6e9c1",
#   light_aqua = "#e8e5b5",
#   light_aqua_soft = "#e1dbac",
#   gray = "#928374",
# }

# Use either screen or screen-256color.
# https://sanctum.geek.nz/arabesque/term-strings/
# Check if terminal have 256 colors and set terminal acoordingly
# tmux-256color enables italics (instead of screen-256color)
# if-shell 'test $(tput colors) -ge 256' 'set-option -g default-terminal "screen-256color"'
set-option -g default-terminal "tmux-256color"

set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# Set border colors between panes
set-option -g pane-border-style fg="#458588",bg=default
set-option -g pane-active-border-style fg="#458588",bg=default

# --------------------------------
# ------ Status bar colors -------
# --------------------------------

# Set the status line's colors (default is background)
set-option -g status-style fg=default,bg=default

# Style of the center status line that is
# Selected:
set-window-option -g window-status-current-style fg="#e1dbac",bold,bg=default
# Not selected
set-window-option -g window-status-style bg=default,fg="#928374"

# Center the window list in the status line
set-option -g status-justify centre

# Status line left shows session
set-option -g status-left "#[fg=#e1dbac,bg=default,bold]#S ‚ùØ"

# Status line right shows the clock
set-option -g status-right "#[fg=#e1dbac,bg=default,bold]#(date '+%a, %b %d - %H:%M')"

# Max length of the {left,right} side
set-option -g status-left-length 50
set-option -g status-right-length 50

# --------------------------------
# --- Plugins handled with tpm ---
# --------------------------------

# Do automatic restore of sessions on reboot
set-option -g @continuum-restore 'on'
set-option -g @continuum-boot 'on'

set-option -g @resurrect-capture-pane-contents 'on'

# Resurrection strategy after a reboot
# Recommended to use tpope/vim-obsession to make this easier
set-option -g @resurrect-strategy-vim 'session'

# List of plugins
# Plugin manager
set-option -g @plugin 'tmux-plugins/tpm'

# Resurrect tmux after reboot
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'

# Make the default register to copy to the clipboard
# NOTE: On OSX, this requires `brew install reattach-to-user-namespace`
set-option -g @plugin 'tmux-plugins/tmux-yank'

# install tpm if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Initialize tmux plugin manager (This must be the last line of this file)
# prefix + I  - Install the plugins
# prefix + U  - Update the plugins
run '~/.tmux/plugins/tpm/tpm'
