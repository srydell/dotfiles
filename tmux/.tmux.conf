# --------------------------------
# ------- tmux Config file -------
# --------------------------------

# Set the delay between prefix and command
set-option -s escape-time 1

# Key bindings in tmux prompt (prefix + :)
# Partial vim emulation is confusing
set-option -g status-keys 'emacs'

# Set mouse on
set-option -g mouse on

# Automatically renumber windows upon deletion
set-option -g renumber-windows on

# Resize panes immediately for all clients
set-window-option -g aggressive-resize on

# --------------------------------
# --------- Key bindings ---------
# --------------------------------

# Remap prefix from CTRL-b to CTRL-a
unbind C-b
set-option -g prefix C-a

# Use C-a in other programs by using it twice
bind-key C-a send-prefix

# Reload config file with r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# Set the current pane to fullscreen with prefix+f
unbind z
bind-key f resize-pane -Z

# Shortcut to synchronize panes toggle
bind-key S set-window-option synchronize-panes

# Put pane on a new window but keep focus
bind-key b break-pane -d

# Enable vi keys in copy mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle
# Can also send to clipboard managers
# bind-key -t copy-mode-vi 'y' copy-pipe "xclip -sel clip -i"

# Smart pane switching with awareness of Vim splits.
# True if current pane is running vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# True if current pane is running fzf
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# True if current pane is running weechat or irssi
is_irc="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(weechat|irssi)?$'"

# Movement integration between vim and tmux splits
# Move to panes with vim keys as ctrl followed by hjkl
# Relies on vim plugin 'christoomey/vim-tmux-navigator'
bind-key -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind-key -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 ($is_irc && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind-key -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 ($is_irc && tmux send-keys C-k) || \
                 tmux select-pane -U"

bind-key -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Paste buffer with P
unbind P
bind-key P paste-buffer

# Switch panes with h, j, k, l
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Switch window multiple times after only one prefix send (-r option)
bind-key -r n select-window -t :+
bind-key -r p select-window -t :-

# Resize panes with HJKL
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Split panes and do retain the current directory of existing pane
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Split pane
bind-key _ split-window -v
bind-key \ split-window -h

# Disable confirm on killing pane/window
bind-key x kill-pane
bind-key X kill-window
unbind &

# --------------------------------
# ------- Colors & visuals -------
# --------------------------------

# Use either screen or screen-256color.
# https://sanctum.geek.nz/arabesque/term-strings/
# Check if terminal have 256 colors and set terminal acoordingly
# tmux-256color enables italics (instead of screen-256color)
if-shell 'test $(tput colors) -ge 256' 'set-option -g default-terminal "screen-256color"'

# Set the status line's colors
set-option -g status-style fg=default,bg=default

# Set colors for the active window
set-window-option -g window-status-current-style fg=colour12,bold,bg=default

# Set border colors between panes
set-option -g pane-border-fg colour12
set-option -g pane-border-bg default
set-option -g pane-active-border-fg colour12
set-option -g pane-active-border-bg default

# Center the window list in the status line
set-option -g status-justify centre

# Disable activity alerts
set-window-option -g monitor-activity off
set-option -g visual-activity off

# Max length of the {left,right} side
set-option -g status-left-length 50
set-option -g status-right-length 50

# Status line left shows session
set-option -g status-left "#S ‚ùØ"
set-option -g status-right "#(date '+%a, %b %d - %H:%M')"

# --------------------------------
# --- Plugins handled with tpm ---
# --------------------------------

# Do automatic restore of sessions on reboot
set-option -g @continuum-restore 'on'
set-option -g @continuum-boot 'on'

set-option -g @resurrect-capture-pane-contents 'on'

# Resurrection strategy after a reboot
# Recommended to use tpope/vim-obsession to make this easier
set-option -g @resurrect-strategy-vim 'session'

# List of plugins
# Plugin manager
set-option -g @plugin 'tmux-plugins/tpm'

# Resurrect tmux after reboot
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'

# Make the default register to copy to the clipboard
# NOTE: On OSX, this requires `brew install reattach-to-user-namespace`
set-option -g @plugin 'tmux-plugins/tmux-yank'

# install tpm if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Initialize tmux plugin manager (This must be the last line of this file)
# prefix + I  - Install the plugins
# prefix + U  - Update the plugins
run '~/.tmux/plugins/tpm/tpm'
