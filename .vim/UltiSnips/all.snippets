# Global snippets
# Requires vim >= 7.4 to import directly from .vim/pythonx
global !p
from my_snippets_helpers import *
endglobal

# Simple text snippet
snippet bye "My mail signature"
Good bye, Sir. Hope to talk to you soon.
- Arthus, King of Britain
endsnippet

# Simple mail snippet
snippet letter
Dear $1,
$0
Yours sincerely,
$2
endsnippet

# Illustrating default text
snippet case
case ${1:word} in
	${2:pattern} ) $0;;
endsnippet

# Illustrate mirrors ($1 is mirrored in begin and end)
snippet env
\begin{${1:equation}}
	$0
\end{$1}
endsnippet

snippet ifndef
#ifndef ${1:SOME_DEFINE}
#define $1
$0
#endif /* $1 */
endsnippet

# Tabstop within a tabstop
snippet a
<a href="${1:http://www.${2:example.com}}"</a>
	$0
</a>
endsnippet

# Display the number of spaces before start of line
snippet indent
Indent is: `!v indent(".")`.
endsnippet

# default/search/option
# Visual select "should" <tab>t<tab>
# <tag>inside text is</tag>
snippet t
<tag>${VISUAL:inside text/should/is/g}</tag>
endsnippet

# Python to move text toward itselfs upper version
snippet wow
${1:Text}`!p snip.rv = upper_right(t[1])`
endsnippet

# Visual select text to be indented with wrapping \begin{$1} \end{$1}
# can write be<tab> OR begin<tab> OR be wordInsideCurlyBraces<tab>
# Must be beginning of line and it uses regex
snippet "be(gin)?( (\S+))?" "begin{} / end{}" br
\begin{${1:`!p
snip.rv = match.group(3) if match.group(2) is not None else "something"`}}
    ${2:${VISUAL}}
\end{$1}$0
endsnippet

# Postfix snippet
# word.par<tab> will expand to (word$1)$0
snippet "(\w+).par" "Parenthesis (postfix)" r
(`!p snip.rv = match.group(1)`$1)$0
endsnippet

# Transformations
# Demo: Uppercase one character
snippet title "Title transformation"
${1:a text}
${1/\w+\s*/\u$1/}
endsnippet

# Demo: Uppercase on echaracter and global replace
snippet title2 "Titlelize in the Transformation"
${1:a text}
${1/\w+\s*/\u$0/g}
endsnippet

# Demo: ASCII transformation
snippet ascii "Replace non ascii chars"
${1: an accentued text}
${1/.*/$0/a}
endsnippet

# Demo: Regular expression grouping
# The second grouping is only known if %s is written in the first.
snippet printf
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet
