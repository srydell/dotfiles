# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Aliases for commands. The keys of the given dictionary are the
# aliases, while the values are the commands they map to.
# Type: Dict
c.aliases = {'gh': 'open https://github.com', 'ghr': 'open https://github.com/srydell', 'q': 'quit', 'w': 'session-save', 'wq': 'quit --save'}

# Always restore open sites when qutebrowser is reopened.
# Type: Bool
c.auto_save.session = True

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Search engines which can be used via the address bar. Maps a search
# engine name (such as `DEFAULT`, or `ddg`) to a URL with a `{}`
# placeholder. The placeholder will be replaced by the search term, use
# `{{` and `}}` for literal `{`/`}` signs. The search engine named
# `DEFAULT` is used when `url.auto_search` is turned on and something
# else than a URL was entered to be opened. Other search engines can be
# used by prepending the search engine name to the search term, e.g.
# `:open google qutebrowser`.
# Type: Dict
c.url.searchengines = {'DEFAULT': 'https://duckduckgo.com/?q={}', 'aw': 'https://wiki.archlinux.org/?search={}'}

# Foreground color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.fg = 'white'

# Font used in the completion widget.
# Type: Font
c.fonts.completion.entry = '12pt monospace'

# Font used in the completion categories.
# Type: Font
c.fonts.completion.category = 'bold 12pt monospace'

# Font used for the debugging console.
# Type: QtFont
c.fonts.debug_console = '12pt monospace'

# Font used for the downloadbar.
# Type: Font
c.fonts.downloads = '12pt monospace'

# Font used for the hints.
# Type: Font
c.fonts.hints = 'bold 12pt monospace'

# Font used in the keyhint widget.
# Type: Font
c.fonts.keyhint = '12pt monospace'

# Font used for error messages.
# Type: Font
c.fonts.messages.error = '12pt monospace'

# Font used for info messages.
# Type: Font
c.fonts.messages.info = '12pt monospace'

# Font used for warning messages.
# Type: Font
c.fonts.messages.warning = '12pt monospace'

# Font used for prompts.
# Type: Font
c.fonts.prompts = '16pt sans-serif'

# Font used in the statusbar.
# Type: Font
c.fonts.statusbar = '16pt monospace'

# Font used in the tab bar.
# Type: QtFont
c.fonts.tabs = '16pt monospace'

# Default font size (in pixels) for fixed-pitch text.
# Type: Int
c.fonts.web.size.default_fixed = 14

# Hard minimum font size (in pixels).
# Type: Int
c.fonts.web.size.minimum = 12

# Minimum logical font size (in pixels) that is applied when zooming
# out.
# Type: Int
c.fonts.web.size.minimum_logical = 6

# This setting can be used to map keys to other keys. When the key used
# as dictionary-key is pressed, the binding for the key used as
# dictionary-value is invoked instead. This is useful for global
# remappings of keys, for example to map Ctrl-[ to Escape. Note that
# when a key is bound (via `bindings.default` or `bindings.commands`),
# the mapping is ignored.
# Type: Dict
c.bindings.key_mappings = {'<Ctrl+6>': '<Ctrl+^>', '<Ctrl+Enter>': '<Ctrl+Return>', '<Ctrl+j>': '<Return>', '<Ctrl+m>': '<Return>', '<Ctrl+[>': '<Escape>', '<Enter>': '<Return>', '<Shift+Enter>': '<Return>', '<Shift+Return>': '<Return>'}

# Spawn mpv on url with <Ctrl+v>
# Opens in corner and --x11-name will be picked up by i3
config.bind('<Ctrl+v>', 'spawn mpv --x11-name=browserVideo --geometry=-0-0 --autofit=35% {url}')
